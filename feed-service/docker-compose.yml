version: "3.8"

services:
  # ----------------------------
  # PostgreSQL (for Feed Service)
  # ----------------------------
  postgres:
    image: postgres:16-alpine
    container_name: feed_service_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: feed_service_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - feed-service-network
    restart: unless-stopped

  # ----------------------------
  # Redis (for Feed Service)
  # ----------------------------
  redis:
    image: redis:7-alpine
    container_name: feed_service_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - feed-service-network
    restart: unless-stopped

  # ----------------------------
  # Feed Service
  # ----------------------------
  feed-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: feed-service
    ports:
      - "50054:50054"
    environment:
      # Database
      FEED_DB_HOST: postgres
      FEED_DB_PORT: 5432
      FEED_DB_USER: postgres
      FEED_DB_PASSWORD: postgres
      FEED_DB_NAME: feed_service_db
      FEED_DB_SSLMODE: disable

      # Redis
      REDIS_URL: redis:6379
      REDIS_PASSWORD: ""
      REDIS_DB: 0

      # gRPC
      GRPC_PORT: 50054
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - feed-service-network
    restart: unless-stopped

# ----------------------------
# Networks
# ----------------------------
networks:
  feed-service-network:
    driver: bridge

# ----------------------------
# Volumes
# ----------------------------
volumes:
  pgdata:
  redis_data:
