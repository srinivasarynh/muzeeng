syntax = "proto3";

package post;

option go_package = "./";

import "google/protobuf/timestamp.proto";

// ============================================
// POST SERVICE
// ============================================

service PostService {
  rpc CreatePost(CreatePostRequest) returns (Post);
  rpc GetPost(GetPostRequest) returns (Post);
  rpc UpdatePost(UpdatePostRequest) returns (Post);
  rpc DeletePost(DeletePostRequest) returns (Response);
  rpc GetUserPosts(GetUserPostsRequest) returns (PostConnection);
  rpc IncrementCommentsCount(IncrementCommentsCountRequest) returns (Response);
  rpc DecrementCommentsCount(DecrementCommentsCountRequest) returns (Response);
  rpc IncrementLikesCount(IncrementLikesCountRequest) returns (Response);
  rpc DecrementLikesCount(DecrementLikesCountRequest) returns (Response);
}

// ============================================
// MESSAGES
// ============================================

message CreatePostRequest {
  string user_id = 1;
  string content = 2;
}

message GetPostRequest {
  string post_id = 1;
  optional string requesting_user_id = 2; 
}

message UpdatePostRequest {
  string post_id = 1;
  string user_id = 2;
  string content = 3;
}

message DeletePostRequest {
  string post_id = 1;
  string user_id = 2;
}

message GetUserPostsRequest {
  string user_id = 1;
  int32 first = 2;
  optional string after = 3;
  optional string requesting_user_id = 4;
}

message IncrementCommentsCountRequest {
  string post_id = 1;
}

message DecrementCommentsCountRequest {
  string post_id = 1;
}

message IncrementLikesCountRequest {
  string post_id = 1;
}

message DecrementLikesCountRequest {
  string post_id = 1;
}

message Post {
  string id = 1;
  string user_id = 2;
  string content = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  int32 likes_count = 6;
  int32 comments_count = 7;
  optional bool is_liked = 8; 
}

message PostEdge {
  string cursor = 1;
  Post node = 2;
}

message PageInfo {
  optional string end_cursor = 1;
  bool has_next_page = 2;
  optional string start_cursor = 3;
  bool has_previous_page = 4;
}

message PostConnection {
  repeated PostEdge edges = 1;
  PageInfo page_info = 2;
  int32 total_count = 3;
}

message Response {
  bool success = 1;
  string message = 2;
}