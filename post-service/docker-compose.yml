version: "3.8"

services:
  # ----------------------------
  # NATS (Message Broker)
  # ----------------------------
  nats:
    image: nats:2.9.21-alpine
    container_name: nats
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - post-service-network
    restart: unless-stopped

  # ----------------------------
  # PostgreSQL (Post Service Database)
  # ----------------------------
  postgres:
    image: postgres:15-alpine
    container_name: post_service_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: post_service_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - post-service-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ----------------------------
  # Post Service
  # ----------------------------
  post-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: post-service
    ports:
      - "50053:50053"
    environment:
      POST_DB_HOST: postgres
      POST_DB_PORT: 5432
      POST_DB_USER: postgres
      POST_DB_PASSWORD: postgres
      POST_DB_NAME: post_service_db
      POST_DB_SSLMODE: disable
      POST_DB_MAX_OPEN_CONNS: 25
      POST_DB_MAX_IDLE_CONNS: 5
      POST_DB_MAX_LIFETIME: 5m
      GRPC_PORT: 50053
      NATS_URL: nats://nats:4222
      NATS_CLIENT_ID: post-service
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - post-service-network
    restart: unless-stopped

# ----------------------------
# Networks
# ----------------------------
networks:
  post-service-network:
    driver: bridge

# ----------------------------
# Volumes
# ----------------------------
volumes:
  postgres_data: